<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <!--由Spring载入的Log4j配置文件位置-->
  <context-param>
      <param-name>log4jConfiguration</param-name>
      <param-value>classpath:conf/log4j2.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
  </listener>
  <filter>
    <filter-name>log4jServletFilter</filter-name>
    <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>log4jServletFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>

  <!--spring配置步骤一：引入spring-->
  <context-param>
    <!--载入Spring 配置文件-->
    <param-name>contextConfigLocation</param-name>
    <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <!--springmvc配置步骤一：前端控制器  引入springmvc-->
  <servlet>
    <servlet-name>springmvc</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <!--加载配置文件 配置处理映射器，适配器  默认加载/WEB-INF/springmvc-servlet.xml-->
      <param-name>contextConfigLocation</param-name>
      <!--springmvc配置步骤三：配置处理器映射器，新建文件springmvc-servlet.xml，并在此文件中配置-->
      <param-value>/WEB-INF/springmvc-servlet.xml</param-value>
    </init-param>
    <!-- <load-on-startup>1</load-on-startup> -->
  </servlet>

  <!--springmvc配置步骤二：处理url的规则-->
  <servlet-mapping>
    <servlet-name>springmvc</servlet-name>
    <!--*.action,处理以*.action结尾的由DispatcherServlet解析-->
    <!--/, 所有访问地址都由DispatcherServlet解析，对于静态文件的解析需要特殊处理，实现RESTful风格的URL-->
    <!--/*,解这样配置不对，使用这种配置，最终要转发到一个jsp页面时，仍然要由DispatcherServlet解析jsp地址，不能根据jsp页面找到handler，会报错-->
    <url-pattern>/</url-pattern>
  </servlet-mapping>

  <!--filter 拦截请求  加密请求配置 start-->
  <!--<filter>-->
    <!--<filter-name>DelegatingFilterProxy</filter-name>-->
    <!--<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>-->
    <!--<init-param>-->
      <!--<param-name>targetBeanName</param-name>-->
      <!--<param-value>paramFilter</param-value>-->
    <!--</init-param>-->
    <!--<init-param>-->
      <!--<param-name>targetFilterLifecycle</param-name>-->
    <!--<param-value>true</param-value>-->
    <!--</init-param>-->
  <!--</filter>-->

  <!--<filter-mapping>-->
    <!--<filter-name>DelegatingFilterProxy</filter-name>-->
    <!--<url-pattern>/erp/*</url-pattern>-->
  <!--</filter-mapping>-->


  <session-config>
    <session-timeout>
      30
    </session-timeout>
  </session-config>

  <welcome-file-list>
    <welcome-file>redirect.jsp</welcome-file>
  </welcome-file-list>

</web-app>
